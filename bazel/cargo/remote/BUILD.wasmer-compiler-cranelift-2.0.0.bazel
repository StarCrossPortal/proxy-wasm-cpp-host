"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//bazel/cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT OR Apache-2.0"
])

# Generated Targets
# buildifier: disable=out-of-order-load
# buildifier: disable=load-on-top
load(
    "@rules_rust//cargo:cargo_build_script.bzl",
    "cargo_build_script",
)

cargo_build_script(
    name = "wasmer_compiler_cranelift_build_script",
    srcs = glob(["**/*.rs"]),
    build_script_env = {
    },
    crate_features = [
        "default",
        "gimli",
        "std",
        "unwind",
    ],
    crate_root = "lib/compiler-cranelift/build.rs",
    data = glob(["**"]),
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "2.0.0",
    visibility = ["//visibility:private"],
    deps = [
    ],
)

rust_library(
    name = "wasmer_compiler_cranelift",
    srcs = glob(["**/*.rs"]),
    crate_features = [
        "default",
        "gimli",
        "std",
        "unwind",
    ],
    crate_root = "lib/compiler-cranelift/src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "2.0.0",
    # buildifier: leave-alone
    deps = [
        ":wasmer_compiler_cranelift_build_script",
        "@proxy_wasm_cpp_host__cranelift_codegen__0_74_0//:cranelift_codegen",
        "@proxy_wasm_cpp_host__cranelift_entity__0_74_0//:cranelift_entity",
        "@proxy_wasm_cpp_host__cranelift_frontend__0_74_0//:cranelift_frontend",
        "@proxy_wasm_cpp_host__gimli__0_24_0//:gimli",
        "@proxy_wasm_cpp_host__loupe__0_1_3//:loupe",
        "@proxy_wasm_cpp_host__more_asserts__0_2_1//:more_asserts",
        "@proxy_wasm_cpp_host__rayon__1_5_1//:rayon",
        "@proxy_wasm_cpp_host__smallvec__1_6_1//:smallvec",
        "@proxy_wasm_cpp_host__tracing__0_1_26//:tracing",
        "@proxy_wasm_cpp_host__wasmer_compiler__2_0_0//:wasmer_compiler",
        "@proxy_wasm_cpp_host__wasmer_types__2_0_0//:wasmer_types",
        "@proxy_wasm_cpp_host__wasmer_vm__2_0_0//:wasmer_vm",
    ],
)
