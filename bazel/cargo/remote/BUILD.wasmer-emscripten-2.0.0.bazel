"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//bazel/cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT"
])

# Generated Targets

rust_library(
    name = "wasmer_emscripten",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
    ],
    crate_root = "lib/emscripten/src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "2.0.0",
    # buildifier: leave-alone
    deps = [
        "@proxy_wasm_cpp_host__byteorder__1_4_3//:byteorder",
        "@proxy_wasm_cpp_host__lazy_static__1_4_0//:lazy_static",
        "@proxy_wasm_cpp_host__libc__0_2_94//:libc",
        "@proxy_wasm_cpp_host__log__0_4_14//:log",
        "@proxy_wasm_cpp_host__time__0_1_43//:time",
        "@proxy_wasm_cpp_host__wasmer__2_0_0//:wasmer",
    ] + selects.with_or({
        # cfg(windows)
        (
            "@rules_rust//rust/platform:i686-pc-windows-msvc",
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
            "@proxy_wasm_cpp_host__getrandom__0_2_2//:getrandom",
        ],
        "//conditions:default": [],
    }),
)
